---
- name: create imagestream
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: image.openshift.io/v1
      kind: ImageStream
      metadata:
        name: "{{ meta.name }}"
        namespace: "{{ meta.namespace }}"
        labels:
          app: "{{ meta.name }}"
      spec:
        dockerImageRepository: "{{ meta.name }}"
        tags:
          - name: latest

- name: set imagestream repository
  when: state == "present"
  vars:
    imagestream: "{{ lookup('k8s', kind='ImageStream',
                     namespace=meta.namespace, resource_name=meta.name) }}"
  set_fact:
    imagestream_repository: "{{ imagestream.status.dockerImageRepository }}"

- name: create buildconfig
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'buildconfig.yaml.j2') }}"

- name: create deploymentconfig
  k8s:
    state: "{{ state }}"
    definition:
      kind: DeploymentConfig
      apiVersion: apps.openshift.io/v1
      metadata:
        name: "{{ meta.name }}"
        namespace: "{{ meta.namespace }}"
        labels:
          app: "{{ meta.name }}"
          deploymentConfig: "{{ meta.name }}"
      spec:
        replicas: "{{ size }}"
        selector:
          app: "{{ meta.name }}"
        template:
          metadata:
            labels:
              app: "{{ meta.name }}"
              deploymentConfig: "{{ meta.name }}"
          spec:
            containers:
            - name: "{{ meta.name }}"
              env:
              - name: DRIVER_HOST
                value: "{{ meta.name }}-headless"
              - name: OSHINKO_CLUSTER_NAME
                value: "{{ oshinko_cluster_name }}"
              - name: APP_ARGS
                value: "{{ app_args }}"
              - name: SPARK_OPTIONS
                value: "{{ spark_options|join(' ') }}"
              - name: OSHINKO_DEL_CLUSTER
                value: "{{ delete_cluster }}"
              - name: APP_EXIT
                value: "{{ app_exit }}"
              - name: OSHINKO_NAMED_CONFIG
                value: "{{ cluster_config }}"
              - name: OSHINKO_SPARK_DRIVER_CONFIG
                value: "{{ driver_config }}"
              - name: SPARK_URL_OVERRIDE
                value: "{{ spark_url_override }}"
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              image: "{{ imagestream_repository }}:latest"
              imagePullPolicy: IfNotPresent
              resources: {}
              terminationMessagePath: /dev/termination-log
              volumeMounts:
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: false
            dnsPolicy: ClusterFirst
            serviceAccountName: oshinko-oshizushi
            volumes:
            - downwardAPI:
                items:
                - fieldRef:
                    fieldPath: metadata.labels
                  path: labels
              name: podinfo

- name: create headless service
  k8s:
    state: "{{ state }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "{{ meta.name }}-headless"
        namespace: "{{ meta.namespace }}"
        labels:
          app: "{{ meta.name }}"
      spec:
        ports:
        - name: driver-rpc-port
          port: 7078
          protocol: TCP
          targetPort: 7078
        - name: blockmanager
          port: 7079
          protocol: TCP
          targetPort: 7079
        selector:
          app: "{{ meta.name }}"
